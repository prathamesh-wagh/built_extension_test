var R                     = require('ramda');
var ObjectCons            = require('./object');
var utility               = require('./utilities/utility');
var when                  = require('when');
var instanceMethodBuilder = require('./utilities/instanceMethodBuilder')();

/**
* @class UserRoleMapper
* @classdesc
*   Represents a role to appuser mapping in your application on Built.io Backend. UserRoleMapperRoleMapper inherts from {@link Object}.
* @instance
* @description
*   Creates a role to appuser mapping
* @param {String|Object} uid The uid of this object on Built.io Backend or a json object with role_uid and user_uid properties.
* @example
* // 'blt5d4sample2633b' is a dummy Application API key
* // app.UserRoleMapperRoleMapper() returns a 'UserRoleMapperRoleMapper' instance
* // 'blt111sample2423b' is uid of an user on Built.io Backend
* // 'blt222sample2423b' is uid of a role on Built.io Backend
* var UserRoleMapper = Built.App('blt5d4sample2633b').UserRoleMapperRoleMapper; 
* // Example demonstrating the constructor taking a user's uid as argument
* var user = UserRoleMapper('blt111sample2423b');
* // Example demonstrating the constructor taking a initial value
* var user = UserRoleMapper({
*    role_uid: 'blt222sample2423b',
*    user_uid: 'blt111sample2423b'
* });
* @return {UserRoleMapper}
*/
var UserCons = module.exports = R.curry(function(app,cls,headers,query,data,delta) {
	var returnObj = ObjectCons(app, cls, headers, {}, data, delta);
	returnObj     = instanceMethodBuilder.build(module.exports,returnObj);
	return returnObj;
});
utility.copyProperties(module.exports, ObjectCons);


var setValue = R.curry(function(property, value, userRoleMapper){
	// If value is a GenericObject
	return userRoleMapper.set(property, value)
})

/**
* Set a value for role_uid field
* @function setRoleUid
* @param {String} uid Uid of a existing role on Built.io Backend
* @instance
* @memberof UserRoleMapper
* @example
* // 'blt5d4sample2633b' is a dummy Application API key
* // 'app.UserRoleMapper() returns a 'UserRoleMapper' instance
* // 'blt111sample24a6b' is uid of a role object on Built.io Backend
* var role = Built.App('blt5d4sample2633b').UserRoleMapper();
* role = role.setRoleUid('blt111sample24a6b');
* @return  {UserRoleMapper}
*/
module.exports.setRoleUid = setValue('role_uid')
instanceMethodBuilder.define('setRoleUid', 2);


/**
* Set a value for user_uid field
* @function setUserUid
* @param {String} uid Uid of a existing role on Built.io Backend
* @instance
* @memberof UserRoleMapper
* @example
* // 'blt5d4sample2633b' is a dummy Application API key
* // 'app.UserRoleMapper() returns a 'UserRoleMapper' instance
* // 'blt111sample24a6b' is uid of a application user on object on Built.io Backend
* var role = Built.App('blt5d4sample2633b').UserRoleMapper();
* role = role.setUserUid('blt111sample24a6b');
* @return  {UserRoleMapper}
*/
module.exports.setUserUid = setValue('user_uid')
instanceMethodBuilder.define('setUserUid', 2)


/**
  * Gets value for user_uid
  * @function getUserUid
	* @instance
	* @memberof UserRoleMapper
	* @example
	* // 'blt5d4sample2633b' is a dummy Application API key
	* // 'app.UserRoleMapper() returns a 'UserRoleMapper' instance
	* // 'blt111sample24a6b' is uid of a application user on object on Built.io Backend
	* var role 		= Built.App('blt5d4sample2633b').UserRoleMapper();
	* var userUid = role.getUserUid();
	* @return  {String}
 */
module.exports.getUserUid = function(userRoleMapper){
	return userRoleMapper.get("user_uid")
}
instanceMethodBuilder.define('getUserUid', 1)

/**
  * Gets value for user_uid
  * @function getRoleUid
	* @instance
	* @memberof UserRoleMapper
	* @example
	* // 'blt5d4sample2633b' is a dummy Application API key
	* // 'app.UserRoleMapper() returns a 'UserRoleMapper' instance
	* // 'blt111sample24a6b' is uid of a application user on object on Built.io Backend
	* var role 		= Built.App('blt5d4sample2633b').UserRoleMapper();
	* var userUid = role.getRoleUid();
	* @return  {String}
 */
module.exports.getRoleUid = function(userRoleMapper){
	return userRoleMapper.get("role_uid")
}
instanceMethodBuilder.define('getRoleUid', 1)



